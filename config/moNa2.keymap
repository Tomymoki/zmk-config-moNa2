#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

// OS設定を日本語キーボードのまま使用するための変換定義

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q         &kp L   &kp U   &kp F10      &kp F2                                         &kp F        &kp W  &lt 5 R  &kp Y  &lt 5 P
&kp E         &kp I   &kp A   &kp O        &kp TAB        &trans          &kp LCTRL       &kp K        &kp T  &kp N    &kp S  &lt 6 H
&kp Z         &kp X   &kp C   &kp V        &kp JP_HANZEN  &kp LEFT_ALT    &kp LEFT_SHIFT  &kp G        &kp D  &kp M    &kp J  &kp B
&kp LEFT_WIN  &kp F4  &kp F5  &lt 4 COMMA  &lt 2 PERIOD   &lt 3 SPACE     &kp BACKSPACE   &lt 1 ENTER                         &kp DEL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        NUM {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp MINUS          &kp JP_EQUAL                       &kp F1  &kp F2  &kp F3  &kp F10  &trans
&kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp JP_UNDERSCORE  &kp JP_ASTERISK  &trans    &trans  &kp F4  &kp F5  &kp F6  &kp F11  &trans
&kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS           &kp SLASH        &trans    &trans  &kp F7  &kp F8  &kp F9  &kp F12  &trans
&kp NUMBER_0  &trans        &trans        &trans             &trans           &trans    &trans  &trans                           &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                     &kp ESCAPE      &kp BACKSPACE           &kp UP_ARROW  &kp DELETE               &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans    &trans  &kp HOME        &kp LEFT                &kp DOWN      &kp RIGHT                &kp END
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans    &trans  &kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans        &kp LG(LS(RIGHT_ARROW))  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans    &trans  &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SYMBOLS {
            bindings = <
&kp JP_YEN       &kp JP_TILDE  &kp JP_LPAREN  &kp JP_RPAREN  &kp SLASH                             &kp LESS_THAN  &kp GREATER_THAN  &kp JP_LBRACKET  &kp JP_RBRACKET  &trans
&kp EXCLAMATION  &kp JP_AT     &kp HASH       &kp DOLLAR     &kp PERCENT  &trans    &kp DEL        &kp CARET      &kp AMPERSAND     &kp JP_PIPE      &kp PIPE         &kp COLON
&trans           &trans        &trans        &kp JP_QUOTE   &kp JP_DQUOTE  &trans       &trans        &kp JP_LBRACE  &kp JP_RBRACE  &trans            &trans           &kp SEMICOLON
&trans           &trans        &trans         &trans         &trans       &trans    &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        BLUETOOTH {
            bindings = <
&trans  &trans  &trans  &trans  &trans                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans                                                  &bt BT_CLR_ALL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &mkp MB4         &kp LC(T)  &mkp MB5           &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &mkp LCLK        &mkp MCLK  &mkp RCLK          &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp LC(PAGE_UP)  &kp LC(W)  &kp LC(PAGE_DOWN)  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                                 &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
